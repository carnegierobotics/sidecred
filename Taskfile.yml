version: "2"

env:
  TERM: screen-256color
  GO111MODULE: on

vars:
  BUILD_DIR: build
  BUILD_BIN: sidecred
  BUILD_VERSION:
    sh: git describe --tags --candidates=1 --dirty

tasks:
  default:
    cmds:
      - task: test

  test:
    desc: Run tests.
    cmds:
      - task: build
      - task: test-terraform

  e2e:
    desc: Run E2E test suite
    cmds:
      - task: test
      - go test -race -v ./... -tags=e2e

  build:
    desc: Build binaries.
    cmds:
      - task: go-generate
      - task: test-go
      - task: go-build
        vars: {BINARY: sidecred, OS: '{{OS}}', ARCH: '{{ARCH}}'}

  go-generate:
    desc: Generate test fakes
    cmds:
    - go generate ./...

  go-build:
    cmds:
    - mkdir -p build
    - GOOS={{.OS}} GOARCH={{.ARCH}} go build -o build/{{.BINARY}}-{{.OS}}-{{.ARCH}}{{exeExt}} -ldflags="-buildid= -s -w" -trimpath -v cmd/{{.BINARY}}/main.go
    env:
      CGO_ENABLED: '0'

  test-go:
    desc: Run tests for all Go code.
    silent: true
    cmds:
    - gofmt -s -l -w .
    - go vet -v ./...
    - go test -race -v ./...

  test-terraform:
      desc: Run tests for all terraform directories.
      silent: true
      env:
        DIRECTORIES:
          sh: find . -type f -name '*.tf' -not -path "**/.terraform/*" -print0 | xargs -0I {} dirname {} | sort -u
      cmds:
      - |
        BOLD=$(tput bold)
        NORM=$(tput sgr0)

        CWD=$PWD

        for d in $DIRECTORIES; do 
          cd $d
          echo "${BOLD}$PWD:${NORM}"

          if ! terraform fmt -check=true -list=false -recursive=false; then
            echo "  ✗ terraform fmt" && exit $?
          else
            echo "  √ terraform fmt"
          fi

          if ! terraform init -backend=false -input=false -get=true -get-plugins=true -no-color > /dev/null; then
            echo "  ✗ terraform init" && exit $?
          else
            echo "  √ terraform init"
          fi

          if ! terraform validate > /dev/null; then
            echo "  ✗ terraform validate" && exit $?
          else
            echo "  √ terraform validate"
          fi

          cd $CWD
        done
